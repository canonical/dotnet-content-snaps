name: aspnetcore-runtime-100
base: core22
adopt-info: aspnetcore-runtime
summary: ASP.NET Core 10.0 Runtime.
description: |
  .NET runtimes and libraries which are optimized for running .NET apps in production. See https://dot.net/core.
  .NET is a general purpose development platform maintained by Microsoft.

grade: stable
confinement: strict

package-repositories:
 - type: apt
   ppa: dotnet/snaps
   priority: always

architectures:
  - build-on: [amd64]
    build-for: [amd64]
  - build-on: [arm64]
    build-for: [arm64]

slots:
  aspnetcore-runtime:
    content: aspnetcore-runtime-100
    interface: content
    source:
      read:
        - $SNAP/usr/lib/dotnet

parts:
  aspnetcore-runtime:
    plugin: nil
    source: .
    stage-packages:
      - aspnetcore-runtime-10.0
    override-stage: |
      craftctl default

      ASPNETCORE_RUNTIME_VERSION=$(LD_LIBRARY_PATH=${CRAFT_STAGE}/usr/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR} \
        ${CRAFT_STAGE}/usr/lib/dotnet/dotnet --list-runtimes \
        | grep AspNetCore | head -n 1 | awk '{print $2}')

      if [ -f ${CRAFT_PART_SRC}/GIT_SHA ]; then
        craftctl set version="${ASPNETCORE_RUNTIME_VERSION}+git.$(cat ${CRAFT_PART_SRC}/GIT_SHA)"
      else
        craftctl set version="${ASPNETCORE_RUNTIME_VERSION}"
      fi

  mounts:
    plugin: dump
    source: .
    after: 
      - aspnetcore-runtime
    override-build: |
      RUNTIME_VERSION=$(ls ${SNAPCRAFT_STAGE}/usr/lib/dotnet/shared/Microsoft.AspNetCore.App/ | grep 10.0)
      
      for file in mounts/*; do
        sed -i "s/{RUNTIME_VERSION}/$RUNTIME_VERSION/g" $file
        sed -i "s/{SNAP}/$SNAPCRAFT_PROJECT_NAME/g" $file
        if [[ "$file" == *"{RUNTIME_VERSION}"* ]]; then
          new_file=$(echo "$file" | sed "s/{RUNTIME_VERSION}/$RUNTIME_VERSION/")
          mv "$file" "$new_file"
          echo "Renamed '$file' to '$new_file'"
        fi
      done

      craftctl default
    prime:
      - mounts/

lint:
  ignore:
    - library:
      - usr/lib/**/libicu*
      - usr/lib/**/liblttng-ust-*
      - usr/lib/**/libunwind-*
