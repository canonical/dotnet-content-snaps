name: dotnet-runtime-70
base: core22
adopt-info: dotnet-runtime
summary: .NET Core 7.0 Runtime.
description: |
  .NET Core runtimes and libraries which are optimized for running .NET Core apps in production. See https://dot.net/core.
  .NET Core is a general purpose development platform maintained by Microsoft.

grade: stable
confinement: strict

package-repositories:
 - type: apt
   ppa: dotnet/snaps
   priority: always

# The 'apps:' section was inherited from past versions of this snap.
# Since this is a content snap, this section is not really needed, but will
# be kept for backwards compatibility.
apps:
  dotnet:
    command: dotnet
    plugs:
      - network
      - network-bind
      - removable-media
      - home

architectures:
  - build-on: [amd64]
    build-for: [amd64]
  - build-on: [arm64]
    build-for: [arm64]

slots:
  dotnet-runtime:
    content: dotnet-runtime-70
    interface: content
    source:
      read:
        - $SNAP/usr/lib/dotnet

parts:
  dotnet-runtime:
    plugin: nil
    source: .
    stage-packages:
      - dotnet-runtime-7.0
    override-stage: |
      craftctl default

      DOTNET_RUNTIME_VERSION=$(LD_LIBRARY_PATH=${CRAFT_STAGE}/usr/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR} \
        ${CRAFT_STAGE}/usr/lib/dotnet/dotnet --list-runtimes \
        | grep Microsoft.NETCore.App | head -n 1 | awk '{print $2}')

      if [ -f ${CRAFT_PART_SRC}/GIT_SHA ]; then
        craftctl set version="${DOTNET_RUNTIME_VERSION}+git.$(cat ${CRAFT_PART_SRC}/GIT_SHA)"
      else
        craftctl set version="${DOTNET_RUNTIME_VERSION}"
      fi
    override-prime: |
      # This is for backwards compatibility:
      # Up until now, .NET Runtime content snaps would place the .NET directory hive
      # in /. As the binaries are now pulled from Canonical's deb package, which installs
      # the hive into /usr/lib/dotnet, we place a `dotnet` symlink in / so that it's
      # still where people might expect it to be.
      ln --symbolic usr/lib/dotnet/dotnet "${CRAFT_PRIME}"/dotnet
      craftctl default

  mounts:
    plugin: dump
    source: .
    after: 
      - dotnet-runtime
    override-build: |
      RUNTIME_VERSION=$(ls ${SNAPCRAFT_STAGE}/usr/lib/dotnet/shared/Microsoft.NETCore.App/ | grep 7.0)
      
      for file in mounts/*; do
        sed -i "s/{RUNTIME_VERSION}/$RUNTIME_VERSION/g" $file
        sed -i "s/{SNAP}/$SNAPCRAFT_PROJECT_NAME/g" $file
        if [[ "$file" == *"{RUNTIME_VERSION}"* ]]; then
          new_file=$(echo "$file" | sed "s/{RUNTIME_VERSION}/$RUNTIME_VERSION/")
          mv "$file" "$new_file"
          echo "Renamed '$file' to '$new_file'"
        fi
      done

      craftctl default
    prime:
      - mounts/

lint:
  ignore:
    - library:
      - usr/lib/**/libicu*
      - usr/lib/**/liblttng-ust-*
      - usr/lib/**/libunwind-*
